{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/image.js"],"names":["Project","makeStyles","theme","card","height","expandOpen","transform","_ref","name","description","img","linkUrl","_React$useState","React","useState","expanded","setExpanded","react_default","a","createElement","Card","CardActionArea","href","target","CardHeader","title","CardMedia","style","image","CardActions","disableSpacing","IconButton","onClick","aria-expanded","aria-label","ExpandMore_default","Collapse","in","timeout","unmountOnExit","CardContent","Typography","paragraph","IndexPage","layout","seo","project","imgSrc","gatsby_browser_entry","to","maxWidth","marginBottom","components_image","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","Header","siteTitle","background","margin","padding","color","textDecoration","Layout","children","_856328897","Fragment","header","paddingTop","Date","getFullYear","Image","_public_static_d_2969191536_json__WEBPACK_IMPORTED_MODULE_0__","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","placeholderImage","childImageSharp"],"mappings":"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","file":"component---src-pages-index-js-a2f82635e2ca83b3da0c.js","sourcesContent":["import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { Card, CardActionArea, CardActions, CardContent, CardHeader,\n         CardMedia, Collapse, IconButton, Typography, makeStyles } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: 100,\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  }\n}));\n\nconst Project = ({name, description, img, linkUrl}) => {\n  //const styles = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  function handleExpandClick() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card>\n      <CardActionArea>\n        {\n          linkUrl ?\n          <a href={linkUrl} target=\"_blank\">\n          <CardHeader title={name} />\n          </a>\n          :\n          <CardHeader title={name} />\n        }\n        {\n          img &&\n          <CardMedia\n            style={{height: 100}}\n            image={img}\n          />\n        }\n        {\n          description &&\n          <div>\n            <CardActions disableSpacing>\n              <IconButton\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"Show description\"\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Typography paragraph>\n                  {description}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </div>\n        }\n      </CardActionArea>\n    </Card>\n  );\n}\n\nProject.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  img: PropTypes.object,\n  linkUrl: PropTypes.string,\n}\n\nexport default Project\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Project from \"../components/project\"\n\n//import GlennImage from '../images/Glenn/Glenn_AtLNH.jpg'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <p>Welcome to the Gatsby site of Glenn Raskovich!</p>\n    {/*<img src={GlennImage} style={{height: 100, width: 100}}/>*/}\n    <p>Time to build something great.</p>\n    <h1>Portfolio</h1>\n    <h2>Work</h2>\n    <Project name=\"Mitchell International\"\n      linkUrl=\"https://www.mitchell.com\"\n      description=\"I wrote a C# .NET project to automate a PSI build process.\n      Then, I configured a Docker image for it which I hosted on AWS ECS.\n      This utility helped reduce the build time from ~3 days to ~3 hours.\"\n    />\n    <Project name=\"UCSD Computer Science Tutor\"\n      linkUrl=\"https://www.cse.ucsd.edu\"\n      description=\"I've used Java and C++ to help students learn how to design,\n      write, and debug programs. I teach students the fundamentals of object-oriented\n      programming and data structures. I've also led lab sections, done public\n      speaking for discussion sections, and helped design and grade assignments.\"\n    />\n    {/*Use sites.google.com/a/eng.ucsd.edu/spis/ if link below breaks*/}\n    <Project name=\"UCSD Program for Incoming Students Mentor\"\n      linkUrl=\"https://www.cse.ucsd.edu/undergraduate/spis-summer-program-incoming-students-2019\"\n    />\n    <br />\n    <h2>Volunteer Work</h2>\n    <Project name=\"Triton Software Engineering\"\n      linkUrl=\"https://tritonse.github.io\"\n    />\n    <Project name=\"Virtual Reality Medical Center\"\n      linkUrl=\"https://www.vrphobia.com\"\n    />\n    <Project name=\"Boys & Girls Club of America\"\n      linkUrl=\"https://www.bgca.org\"\n    />\n    <br />\n    <h2>Virtual Reality</h2>\n    <Project name=\"MechSuit VR\" />\n    <Project name=\"BendAR\"\n      imgSrc=\"/images/Projects/BendAR.jpg\"\n      linkUrl=\"https://www.devpost.com/software/bendar\"\n    />\n    <Project name=\"Scavenging en-Nahas\"\n      linkUrl=\"https://www.devpost.com/software/scavenging-en-nahas\"\n    />\n    <Link to=\"/games/\">Go to my games!</Link>\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n      <Image />\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n"],"sourceRoot":""}